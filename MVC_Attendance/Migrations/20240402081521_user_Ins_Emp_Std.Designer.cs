// <auto-generated />
using System;
using MVC_Attendance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Attendance.Migrations
{
    [DbContext(typeof(AttDbContext))]
    [Migration("20240402081521_user_Ins_Emp_Std")]
    partial class user_Ins_Emp_Std
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC_Attendance.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MVC_Attendance.Models.Employee", b =>
                {
                    b.HasBaseType("MVC_Attendance.Models.User");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVC_Attendance.Models.Instructor", b =>
                {
                    b.HasBaseType("MVC_Attendance.Models.User");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("MVC_Attendance.Models.Student", b =>
                {
                    b.HasBaseType("MVC_Attendance.Models.User");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int>("GraduationYear")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfAbsences")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniversityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MVC_Attendance.Models.Employee", b =>
                {
                    b.HasOne("MVC_Attendance.Models.User", null)
                        .WithOne()
                        .HasForeignKey("MVC_Attendance.Models.Employee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_Attendance.Models.Instructor", b =>
                {
                    b.HasOne("MVC_Attendance.Models.User", null)
                        .WithOne()
                        .HasForeignKey("MVC_Attendance.Models.Instructor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_Attendance.Models.Student", b =>
                {
                    b.HasOne("MVC_Attendance.Models.User", null)
                        .WithOne()
                        .HasForeignKey("MVC_Attendance.Models.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
